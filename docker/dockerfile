# --------------------
# Stage 1: Build Stage
# --------------------
FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim AS builder

ENV UV_COMPILE_BYTECODE=1
ENV UV_LINK_MODE=copy
ENV UV_PYTHON_DOWNLOADS=0

WORKDIR /app

# Cache dependencies
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev

# Copy the actual app code
COPY . .

# Install app with prod dependencies only
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Export requirements to a traditional requirements.txt file
RUN uv export --frozen --no-hashes --no-dev > requirements.txt

# ----------------------
# Stage 2: Runtime Stage
# ----------------------
FROM python:3.12-slim-bookworm

# Create a non-root user and group
RUN groupadd -r app_user && useradd --no-log-init -r -g app_user app_user

# Set working directory
WORKDIR /opt/user_service

# Copy requirements and install packages directly to system Python
COPY --from=builder /app/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt && rm requirements.txt

# Copy the app code
COPY --from=builder /app/app .

# Switch to non-root user
USER app_user

# Expose FastAPI default port
EXPOSE 8000

# Run the FastAPI app using system uvicorn
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
